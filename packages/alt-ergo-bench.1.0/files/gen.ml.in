
let files =
  [ "arith";
    "everything";
    "gene";
    "list";
    "search" ]

let mlw_file f = f ^ ".mlw"
let bench_file f = "alt_ergo_" ^ f ^ ".bench"

let install =
  String.concat "\n  "
    ("share: [" ::
     List.flatten
       (List.map (fun f -> [mlw_file f; bench_file f]) files))
  ^ "\n]\n"

let bench_content f =
  Printf.sprintf
    "((name alt-ergo-%s)\n \
      (descr\n \
      (\"Benchmark of ``alt-ergo %s''.\"))\n \
      (cmd (%{bin}%/alt-ergo %{share}%/alt-ergo-bench/%s.mlw))\n \
      (env ()) (speed Fast) (timeout 600)\n \
      (topics ((Libperf Cycles))))\n"
    f f f

let output_file filename s =
  let oc = open_out filename in
  output_string oc s;
  close_out oc

let () =
  List.iter (fun f -> output_file (bench_file f) (bench_content f)) files;
  output_file "alt-ergo-bench.install" install
